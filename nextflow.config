// This works to clean things up but I can't see 
// how to globally force copy or hardlinks for 
// published results so we don't just end up with
// a bunch of broken symlinks

// cleanup.enabled = true

//Profile config names for nf-core/configs
process {
  executor = 'slurm'
  queue = { task.memory <= 170.GB ? 'c' : 'm' }
  module = 'anaconda3/2019.10'
  
  // --signal option will be handled by nextflow after 21.10.0 release (see https://github.com/nextflow-io/nextflow/issues/2163)
  clusterOptions = { '--signal B:USR2 ' << ( (queue == 'c' & task.time <= 1.h) ? '--qos rapid' : ( task.time <= 8.h ? '--qos short': ( task.time <= 48.h ? '--qos medium' : '--qos long' ) ) ) }
}

singularity {
  enabled = true
  cacheDir = '/resources/containers'
}

params {
  params.max_time = 14.d
  params.max_cpus = 36
  params.max_memory = 1800.GB
//   igenomes_base = 's3://ngi-igenomes/igenomes/'

  igenomes_base = '/resources/references/igenomes'
  fastq_screen_args = " --conf /groups/nordborg/projects/cegs/rahul/FastQ-Screen/FastQ_Screen_Genomes/fastq_screen.conf "
}

includeConfig 'genomes.d/igenomes.config'
 
process {

    executor = 'slurm'
    memory = 5.GB
    time = 4.h
    cpus = 1
    errorStrategy = 'ignore'
    // errorStrategy = { sleep(Math.pow(2, task.attempt) * 30 as long); return 'retry' }

    withLabel: bigMem {
        memory = 20.GB
    }
    
    withLabel: mem40G {
        memory = 40.GB
    }

    withLabel: hugeMem{
    	memory = 80.GB
    }

    withLabel: multiCore {
        cpus = 8
    }

    withLabel: quadCore{
     	cpus = 4
    }
   
}

// notification {
//     enabled = true
//     to = "${USER}@babraham.ac.uk"
// }

timeline {
    enabled = true
    file = "execution_timeline.html"
}
report {
    enabled = true
    file = "execution_report.html"
}
//trace {
//   enabled = true
//    file = "execution_trace.txt"
//}

// dag {
//   enabled = true
//   file = "pipeline_dag.svg"
// }
